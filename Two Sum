class Solution {
    public int[] twoSum(int[] nums, int target) {
    
        //we can use a hashmap to make this linear instead of exponential 
        Map<Integer, Integer> map = new HashMap<>();
        
        int[] returnVal = new int[2];
        
        int complement;
        
        for (int i = 0; i < nums.length; i++) {
            
            //the target subtract the current value at the array is the value we need
            complement = target - nums[i]; 
            
            //if it exists in the map, we have our first number, and i is our second position
            if (map.containsKey(complement)) {
                
                returnVal[0] = map.get(complement);
                returnVal[1] = i;
                
                return returnVal;
            
            }
            map.put(nums[i], i); //put the value from nums as the key, and the location in the array as the value
        }
        
        return returnVal;
        
    }
}
