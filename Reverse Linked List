//iterative
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null)
        {
            return head;
        }
        
        
        ListNode prev = null;
        ListNode curr = head;
        
        ListNode temp;
        
        while (curr != null)
        {
            temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
            
        }
        
        return prev;
        
    }
}

//recursive
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null) return head;
            
        ListNode p = reverseList(head.next);
            
        head.next.next = head;
        head.next = null;
        return p;
    }
}
